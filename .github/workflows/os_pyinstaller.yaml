name: PyInstaller Workflow

on:
  workflow_call:
    inputs:
      os:
        required: true
        default: 'ubuntu-latest'
        type: string

jobs:
  build:
    if: ${{ github.event.ref == 'refs/heads/main' || github.event.ref == 'refs/heads/test' || startsWith(github.event.ref, 'refs/heads/release/alpha')}}
    strategy:
      fail-fast: false
      matrix:
        spec_file:
          - FMD3-API_BundledFolder
          - FMD3_BundledFolder
          - FMD3-Client_BundledFolder
        include:
          - spec_file: FMD3-API_BundledFolder
            if: contains(steps.detect_bump.outputs.bumped_packages, 'FMD3_API') || contains(steps.detect_bump.outputs.bumped_packages, 'FMD3_Tkinter')
          - spec_file: FMD3_BundledFolder
            if: contains(steps.detect_bump.outputs.bumped_packages, 'FMD3_API') || contains(steps.detect_bump.outputs.bumped_packages, 'FMD3_Tkinter')
          - spec_file: FMD3-Client_BundledFolder
            if: contains(steps.detect_bump.outputs.bumped_packages, 'FMD3_API') || contains(steps.detect_bump.outputs.bumped_packages, 'FMD3_Tkinter')
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build Executable
        uses: ./.github/workflows/app_pyinstaller
        with:
          spec_file: ${{ matrix.spec_file }}
          os: ${{ inputs.os }}
