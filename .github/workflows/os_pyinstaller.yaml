name: PyInstaller Workflow

on:
  workflow_call:
    inputs:
      os:
        required: true
        default: 'ubuntu-latest'
        type: string

jobs:
  build:
    if: ${{ github.event.ref == 'refs/heads/main' || github.event.ref == 'refs/heads/test' || startsWith(github.event.ref, 'refs/heads/release/alpha')}}
    strategy:
      fail-fast: false
      matrix:
        spec_file:
          - FMD3-API_SingleExe
          - FMD3-Client_SingleExe
          - FMD3-WebClient_SingleExe
        include:
          - spec_file: FMD3-API_SingleExe
            if: contains(steps.detect_bump.outputs.bumped_packages, 'FMD3_API') || contains(steps.detect_bump.outputs.bumped_packages, 'FMD3_Tkinter')
          - spec_file: FMD3-Client_SingleExe
            if: contains(steps.detect_bump.outputs.bumped_packages, 'FMD3_API') || contains(steps.detect_bump.outputs.bumped_packages, 'FMD3_Tkinter')
          - spec_file: FMD3-WebClient_SingleExe
            if: contains(steps.detect_bump.outputs.bumped_packages, 'FMD3_API') || contains(steps.detect_bump.outputs.bumped_packages, 'FMD3_Tkinter')
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build Executable
        uses: ./.github/workflows/app_pyinstaller
        with:
          spec_file: ${{ matrix.spec_file }}
          os: ${{ inputs.os }}
  upload_artifacts:
    runs-on: ubuntu-latest
    needs: build
    steps:
#      - name: Download
#        uses: actions/download-artifact@v4
#        with:
#          name: 'ubuntu-latestFMD3-API_SingleExe--dist'
#          path: 'ubuntu/'
#        continue-on-error: true
#      - name: Download
#        uses: actions/download-artifact@v4
#        with:
#          name: 'ubuntu-latestFMD3-Client_SingleExe--dist'
#          path: 'ubuntu/'
#        continue-on-error: true
#      - name: Download
#        uses: actions/download-artifact@v4
#        with:
#          name: 'ubuntu-latestFMD3-WebClient_SingleExe--dist'
#          path: 'ubuntu/'
#        continue-on-error: true
      # windows artifacts
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: 'windows-latestFMD3-API_SingleExe--dist'
          path: 'windows/'
        continue-on-error: true
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: 'windows-latestFMD3-Client_SingleExe--dist'
          path: 'windows/'
        continue-on-error: true
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: 'windows-latestFMD3-WebClient_SingleExe--dist'
          path: 'windows/'
        continue-on-error: true
  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - run: echo "test" > body.md
      - uses: actions/checkout@v3
      - uses: ncipollo/release-action@v1
        with:
          prerelase: true
          artifacts: "windows/*"
          bodyFile: "body.md"